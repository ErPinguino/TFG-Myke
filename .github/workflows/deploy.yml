name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install local Cubiomes JAR
        run: |
          mvn install:install-file \
            -Dfile=tfg/libs/cubiomes-java-0.0.6.jar \
            -DgroupId=com.rasmusantons \
            -DartifactId=cubiomes-java \
            -Dversion=0.0.6 \
            -Dpackaging=jar

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Build backend
        run: mvn -B -DskipTests clean package -f tfg/pom.xml

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build frontend
        run: |
          cd tfg_web
          npm ci
          npm run build

      # ————————————————————————————————
      # Configurar clave SSH para el runner
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Paso de test con verbose para ver el motivo de fallo si lo hubiera
      - name: Test SSH connectivity (verbose)
        run: |
          ssh -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ubuntu@${{ secrets.EC2_HOST }} 'echo SSH OK'

      # Copiar artefactos con scp manual
      - name: Copy files to server
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r \
            compose.yaml \
            tfg_web/default.conf \
            tfg_web/dist \
            tfg/target/tfg-0.0.1-SNAPSHOT.jar \
            ubuntu@${{ secrets.EC2_HOST }}:~/tfg/TFG-Myke

      # Desplegar en remoto vía SSH manual
      - name: Deploy on server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/tfg/TFG-Myke || { echo "Error: Cannot change directory"; exit 1; }
            echo "Directory changed successfully"
            
            docker compose -f compose.yaml down || { echo "Error: Cannot stop containers"; exit 1; }
            echo "Containers stopped successfully"
            
            docker compose -f compose.yaml build backend || { echo "Error: Cannot build backend"; exit 1; }
            echo "Backend built successfully"
            
            docker compose -f compose.yaml build frontend || { echo "Error: Cannot build frontend"; exit 1; }
            echo "Frontend built successfully"
            
            docker compose -f compose.yaml up -d backend frontend || { echo "Error: Cannot start containers"; exit 1; }
            echo "Containers started successfully"
          EOF

